package generated

import (
	"bytes"
	"compress/gzip"
	"io"
)

func init() {
	EmbeddedFiles["stat.lua"] = stat_lua
}

// stat_lua returns raw, uncompressed file data.
func stat_lua() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xb4,0x55,
0x6d,0x8b,0xe3,0x36,0x10,0xfe,0xee,0x5f,0x31,0x2c,0x1c,0x1b,
0xef,0xc6,0xd9,0x24,0xed,0xe5,0xc3,0x81,0x5b,0x0e,0x2e,0x1c,
0xc7,0x51,0x28,0xb7,0x47,0x69,0x29,0x47,0xd0,0x46,0xe3,0x1d,
0xf5,0x6c,0xc9,0x58,0x72,0x5e,0xb8,0x6e,0x7f,0x7b,0x91,0xfc,
0x26,0xc5,0x49,0x43,0x29,0xf5,0x17,0x5b,0xa3,0x19,0xcd,0x33,
0x8f,0xe6,0x19,0x27,0x09,0x7c,0xc5,0x23,0x08,0x0e,0x93,0xb7,
0x7f,0xbe,0x8b,0x61,0xc7,0xf2,0x1a,0xa3,0x24,0x81,0x25,0x7c,
0xc4,0xa3,0x06,0x26,0x39,0x2c,0xe1,0xed,0xa7,0xf7,0x8f,0x51,
0x94,0xab,0x2d,0xcb,0x9d,0x7b,0x0a,0x1f,0xd7,0xbf,0x3d,0xfe,
0xbe,0xf8,0xd2,0xda,0x04,0xef,0x4c,0xcb,0xce,0x64,0x8e,0x25,
0x42,0x6a,0x23,0x7f,0x19,0xfc,0x34,0x2b,0xca,0xdc,0x9a,0x8d,
0x92,0x75,0xf1,0x84,0xd5,0xc4,0xed,0x2f,0xbf,0xc4,0xdd,0xe9,
0xda,0x30,0x83,0x4d,0x0a,0x6d,0x2a,0x21,0x9f,0x67,0x99,0xaa,
0x0a,0x66,0x26,0x37,0x05,0x9a,0x4a,0x6c,0xdf,0xbc,0xd2,0x6f,
0x5e,0xe9,0x9b,0xa9,0x85,0x31,0x05,0xc1,0xe3,0x36,0x4e,0xaa,
0x3d,0xa4,0x50,0x21,0x17,0x7a,0xb6,0x65,0x79,0x3e,0xb9,0xfd,
0xfc,0xe1,0xa7,0xf5,0x6d,0x6c,0x73,0xdb,0x72,0x1a,0x2f,0xd2,
0x68,0xce,0x1e,0x6e,0xd3,0xb6,0x07,0x4b,0xc5,0xb1,0x3b,0xd5,
0xb1,0x01,0x29,0x7c,0x7b,0xf1,0xe0,0xf5,0x9f,0xaa,0x42,0x7e,
0x92,0xf4,0xfd,0xfa,0xf3,0xed,0xb4,0x2f,0xa2,0xaf,0xaa,0xd8,
0x18,0x51,0xa0,0x36,0xac,0x28,0x21,0x85,0x49,0xc1,0x0c,0xcd,
0xb2,0x5c,0xa9,0x6a,0x62,0x71,0x3f,0xc0,0x77,0xf3,0x79,0x0c,
0x77,0xcd,0xeb,0xde,0xbe,0xda,0x38,0xba,0x16,0xb7,0x6a,0x03,
0x57,0x6d,0xe4,0x6a,0x3e,0xef,0x72,0x72,0x91,0x65,0x58,0xa1,
0x34,0x82,0xe5,0x96,0x71,0x77,0x1f,0x29,0xdc,0xbc,0xbb,0x89,
0x22,0x91,0x75,0xf0,0x0d,0xa1,0x8c,0x00,0xa0,0x2f,0x75,0xfb,
0x87,0x56,0x72,0xc6,0x71,0xab,0x38,0x4e,0x1a,0xa7,0x38,0xc2,
0x5c,0x63,0xe0,0xf5,0xcd,0xad,0xec,0x93,0x33,0x6d,0x36,0x75,
0xc9,0x99,0xb1,0x76,0xa9,0xf6,0xd3,0x7e,0xab,0xd8,0xb0,0xdd,
0x33,0xa4,0x30,0xf7,0x4d,0x05,0x3b,0x9c,0x9a,0x8c,0x32,0x0e,
0x62,0x60,0x94,0xd5,0xc8,0xcd,0xa3,0xc2,0x5b,0xf9,0x2e,0x65,
0x85,0x3b,0xa1,0x6a,0x1d,0x20,0xb4,0xcf,0x08,0x88,0xf3,0x3f,
0x85,0x62,0x1f,0x3f,0x8b,0xb7,0xf5,0x32,0x8d,0xfa,0x6f,0x1a,
0xd7,0x45,0xe3,0xba,0xe8,0x5c,0x5d,0x34,0xaa,0x2b,0xbc,0x62,
0x3a,0x57,0x17,0xfd,0xbf,0x75,0xb9,0x57,0x84,0x92,0x77,0x9d,
0x23,0x64,0x59,0x9b,0x4d,0xaf,0xd5,0xe6,0xc3,0x35,0x4d,0xd0,
0x53,0x7d,0xeb,0x34,0x51,0xb6,0x11,0x20,0x6d,0x3a,0x64,0x66,
0x17,0x6e,0x4f,0x64,0x20,0x95,0x19,0x75,0x9b,0x7d,0x92,0x04,
0xa4,0x82,0xbe,0xb4,0x66,0xf2,0x74,0x9b,0xc3,0x31,0x1e,0x82,
0x6e,0xb3,0x6d,0x70,0x66,0x58,0xdf,0xb0,0x28,0x5d,0xc3,0xba,
0xb0,0xb8,0x77,0xf4,0xa5,0xf9,0x18,0x48,0x73,0xea,0xc2,0x7d,
0x4f,0x53,0x57,0x0d,0x36,0xc7,0x84,0x97,0x46,0x64,0x59,0x8f,
0x01,0x12,0x08,0x4b,0xdb,0x5b,0x4d,0x0d,0x60,0x3b,0x25,0x9c,
0x16,0xba,0x27,0x66,0x40,0x93,0xaa,0x73,0x0e,0x7b,0x04,0xae,
0x80,0xb0,0xc2,0x1f,0x2f,0xa5,0x77,0xc7,0x87,0xb7,0xe0,0x60,
0x3c,0x80,0x13,0x7e,0x32,0xce,0x18,0x47,0x97,0x58,0x73,0xe5,
0x8c,0x11,0x3a,0xad,0xda,0xc9,0x68,0x08,0x41,0xe2,0xc1,0xc0,
0x12,0x9e,0x72,0xb5,0xfd,0xaa,0xa1,0xac,0x35,0xa1,0x06,0x95,
0x73,0xac,0x5a,0xc5,0x33,0x3d,0x5c,0x54,0xa6,0x2a,0x78,0x52,
0x86,0x6c,0xf0,0xeb,0xc2,0xfd,0x21,0x16,0xd4,0x66,0xd3,0x6e,
0xd8,0x5a,0x8f,0xd7,0x85,0x6d,0x98,0x26,0xaf,0xaf,0xdd,0xbf,
0x02,0xf1,0x0e,0x44,0xd9,0x6e,0xc0,0x7d,0x9b,0x4e,0x68,0x10,
0x12,0x98,0xb3,0xe8,0x5c,0x19,0xaf,0xb8,0x0b,0x22,0x6f,0x84,
0xd0,0xb9,0xb0,0xdd,0xb3,0x37,0x16,0x9c,0x1c,0xba,0xad,0x82,
0x1d,0x86,0x2d,0x5f,0x14,0x23,0xa8,0x9d,0x32,0x82,0xe4,0x17,
0x86,0x50,0xe0,0xd3,0xea,0x2f,0xb0,0xb5,0x42,0x0d,0xcf,0xea,
0xe6,0x43,0x60,0x6d,0x06,0x44,0x73,0x6d,0x2d,0x97,0x0b,0x1a,
0xb8,0xa4,0x90,0x4b,0xfa,0x2f,0x5c,0x5e,0x18,0x2c,0x3e,0x97,
0x74,0x99,0x4b,0xba,0xc6,0xe5,0x68,0x98,0x05,0x5c,0x5e,0x1c,
0x7c,0x81,0xcf,0x98,0x4b,0x3a,0xc3,0x25,0x9d,0xe5,0x92,0x4e,
0xb9,0xb4,0xda,0x19,0x04,0x3a,0x70,0x14,0x05,0xdc,0x7b,0x8b,
0x7b,0x58,0x44,0xa7,0xb7,0x15,0xae,0xef,0x03,0x9d,0xda,0x6b,
0x0a,0x74,0xfb,0x43,0xd0,0x14,0xe1,0xcf,0xb6,0xef,0x94,0xe0,
0x04,0x8b,0x35,0x6c,0x9a,0x30,0xe1,0x83,0x87,0xaf,0xd3,0x35,
0xf9,0xc0,0x29,0x04,0x4e,0x27,0xc0,0xe9,0xdf,0x01,0xa7,0x73,
0xc0,0xe9,0x9f,0x81,0xd3,0x26,0xec,0xa0,0x10,0x38,0x39,0xe0,
0x57,0x47,0xf8,0xf5,0xd1,0xed,0x7b,0xac,0x7f,0xfd,0xf9,0xc3,
0xa7,0x75,0xe0,0xb4,0xfc,0xfe,0x6e,0x35,0xbf,0x5b,0xcd,0x63,
0x2b,0x07,0x3c,0x94,0xa2,0xc2,0x46,0x08,0x9c,0x1d,0xa3,0xbf,
0x03,0x00,0x00,0xff,0xff,0x79,0x3b,0xac,0xce,0xf7,0x0a,0x00,
0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}