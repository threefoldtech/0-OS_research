package generated

import (
	"bytes"
	"compress/gzip"
	"io"
)

func init() {
	EmbeddedFiles["stat.lua"] = stat_lua
}

// stat_lua returns raw, uncompressed file data.
func stat_lua() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xb4,0x55,
0xdf,0x8b,0xe3,0x36,0x10,0x7e,0xf7,0x5f,0x31,0x2c,0x1c,0x1b,
0xef,0xc6,0xd9,0x24,0xed,0xed,0xc3,0x41,0x5a,0x0e,0x2e,0x1c,
0xc7,0x51,0x28,0xb7,0x47,0x69,0x39,0x96,0xa0,0x8d,0xc6,0x3b,
0xea,0xda,0x92,0x2b,0xc9,0xc9,0x86,0xeb,0xf5,0x6f,0x2f,0x92,
0x7f,0x49,0x71,0xd2,0xa5,0x94,0xfa,0xc5,0xd6,0x68,0x46,0xf3,
0xcd,0xa7,0xf9,0xc6,0x59,0x06,0x4f,0x78,0x00,0xc1,0x61,0xf2,
0xf6,0xcf,0x77,0x29,0xec,0x58,0x51,0x63,0x92,0x65,0xb0,0x84,
0x8f,0x78,0x30,0xc0,0x24,0x87,0x25,0xbc,0xfd,0xf4,0xfe,0x2e,
0x49,0x0a,0xb5,0x65,0x85,0x77,0x5f,0xc1,0xc7,0xf5,0x6f,0x77,
0x5f,0x16,0xf7,0xad,0x4d,0xf0,0xce,0xb4,0xec,0x4c,0xf6,0x50,
0x21,0xac,0x5c,0xe4,0x2f,0x83,0x9f,0x61,0x65,0x55,0x38,0xb3,
0x55,0xb2,0x2e,0x1f,0x50,0x4f,0xfc,0xfe,0xf2,0x3e,0xed,0x4e,
0x37,0x96,0x59,0x6c,0x52,0x18,0xab,0x85,0x7c,0x9c,0xe5,0x4a,
0x97,0xcc,0x4e,0x2e,0x4a,0xb4,0x5a,0x6c,0xdf,0xbc,0x32,0x6f,
0x5e,0x99,0x8b,0xa9,0x83,0x31,0x05,0xc1,0xd3,0x36,0x4e,0xaa,
0x3d,0xac,0x40,0x23,0x17,0x66,0xb6,0x65,0x45,0x31,0xb9,0xfc,
0xfc,0xe1,0xa7,0xf5,0x65,0xfa,0x65,0x71,0x0f,0xd7,0x30,0x87,
0x2c,0xfb,0xa3,0x16,0xdb,0x27,0xd8,0xb3,0x03,0x58,0x05,0x5b,
0x25,0x77,0xa8,0xad,0xfb,0x6c,0x80,0x24,0xae,0xe6,0xe6,0x28,
0x32,0x68,0x4f,0x22,0x70,0xd8,0xda,0xec,0x52,0x71,0xec,0x52,
0x7b,0xca,0x60,0x05,0x5f,0xbf,0x05,0x35,0xf4,0x9f,0x4a,0x23,
0x3f,0x42,0xf6,0x7e,0xfd,0xf9,0x72,0xda,0x57,0xda,0x97,0x5e,
0x6e,0xac,0x28,0xd1,0x58,0x56,0x56,0xb0,0x82,0x49,0xc9,0x2c,
0xcd,0xf2,0x42,0x29,0x3d,0x71,0xc5,0xdd,0xc0,0x77,0xf3,0x79,
0x0a,0x57,0xfe,0xd5,0x46,0xd0,0x4b,0x11,0xb7,0x6d,0x88,0x7b,
0x77,0x69,0xb8,0xc8,0x73,0xd4,0x28,0xad,0x60,0x85,0xbb,0x09,
0x7f,0x4f,0x2b,0xb8,0x78,0x77,0x91,0x24,0x22,0xef,0x10,0x5b,
0x42,0x99,0x00,0x40,0x5f,0xdd,0xf6,0x77,0xa3,0xe4,0x8c,0xe3,
0x56,0x71,0x9c,0x34,0x4e,0x69,0x82,0x85,0xc1,0xc8,0xeb,0xab,
0x5f,0xb9,0xa7,0x60,0xc6,0x6e,0xea,0x8a,0x33,0xeb,0xec,0x52,
0xed,0xa7,0xfd,0x56,0xb9,0x61,0xbb,0x47,0x58,0xc1,0x3c,0x34,
0x95,0xec,0xf9,0xd8,0x64,0x95,0xf5,0x10,0x23,0xa3,0xd4,0x23,
0xb7,0x80,0x83,0x60,0x15,0xba,0x54,0x1a,0x77,0x42,0xd5,0x26,
0x42,0xe8,0x9e,0x11,0x10,0xef,0x7f,0x0c,0xc5,0x3d,0x61,0x96,
0x60,0xeb,0xdb,0x34,0xe9,0xbf,0x69,0x5c,0x17,0x8d,0xeb,0xa2,
0x53,0x75,0xd1,0xa8,0xae,0xf8,0x6e,0xe9,0x54,0x5d,0xf4,0xff,
0xd6,0xe5,0x5f,0x09,0x4a,0xde,0x75,0x8e,0x90,0x55,0x6d,0x37,
0xbd,0x86,0x9b,0x0f,0xdf,0x34,0x51,0x4f,0xf5,0xad,0xd3,0x44,
0xb9,0x46,0x80,0x55,0xd3,0x21,0x33,0xb7,0xf0,0x7b,0x22,0x07,
0xa9,0xec,0xa8,0xdb,0xdc,0x93,0x65,0x20,0x15,0xf4,0xa5,0x35,
0x13,0xa9,0xdb,0x1c,0x8e,0x09,0x10,0x74,0x9b,0x6d,0x83,0x33,
0xcb,0xfa,0x86,0x45,0xe9,0x1b,0xd6,0x87,0xa5,0xbd,0x63,0xa8,
0xc6,0xbb,0x48,0x8d,0x53,0x1f,0x1e,0x7a,0xda,0x5a,0x37,0xd8,
0x3c,0x13,0x41,0x1a,0x91,0xe7,0x3d,0x06,0xc8,0x20,0x2e,0x6d,
0xef,0x34,0x35,0x80,0xed,0x94,0x70,0x5c,0xe8,0x9e,0x98,0x05,
0x43,0xaa,0x2e,0x38,0xec,0x11,0xb8,0x02,0x42,0x8d,0x3f,0x9e,
0x4b,0xef,0x8f,0x8f,0x6f,0xc1,0xc3,0xb8,0x01,0xaf,0xf8,0x6c,
0x9c,0x31,0x4d,0xce,0xb1,0xe6,0xcb,0x19,0x23,0xf4,0x5a,0x75,
0xc3,0xd0,0x12,0x82,0xc4,0x67,0x0b,0x4b,0x78,0x28,0xd4,0xf6,
0xc9,0x40,0x55,0x1b,0x42,0x03,0xaa,0xe0,0xa8,0x5b,0xc5,0x33,
0x33,0x5c,0x54,0xae,0x34,0x3c,0x28,0x4b,0x2e,0xf8,0x75,0xe9,
0xff,0x1c,0x0b,0x6a,0xb3,0x19,0x3f,0x5f,0x9d,0xc7,0xeb,0xd2,
0x35,0x4c,0x93,0x37,0xd4,0xee,0x5f,0x91,0x78,0x07,0xa2,0x5c,
0x37,0xe0,0xbe,0x4d,0x27,0x0c,0x08,0x09,0xcc,0x5b,0x4c,0xa1,
0x6c,0x50,0xdc,0x19,0x91,0x37,0x42,0xe8,0x5c,0xd8,0xee,0x31,
0x18,0x0b,0x5e,0x0e,0xdd,0x56,0xc9,0x9e,0x87,0xad,0x50,0x14,
0x23,0xa8,0x9d,0x32,0xa2,0xe4,0x67,0x86,0x50,0xe4,0xd3,0xea,
0x2f,0xb2,0xb5,0x42,0x8d,0xcf,0xea,0xe6,0x43,0x64,0x6d,0x06,
0x44,0x73,0x6d,0x2d,0x97,0x0b,0x1a,0xb8,0xa4,0x98,0x4b,0xfa,
0x2f,0x5c,0x9e,0x19,0x2c,0x21,0x97,0x74,0x9e,0x4b,0x7a,0x89,
0xcb,0xd1,0x30,0x8b,0xb8,0x3c,0x3b,0xf8,0x22,0x9f,0x31,0x97,
0x74,0x82,0x4b,0x3a,0xc9,0x25,0x1d,0x73,0xe9,0xb4,0x33,0x08,
0x74,0xe0,0x28,0x89,0xb8,0x0f,0x16,0xd7,0xb0,0x48,0x8e,0x6f,
0x2b,0x5e,0x5f,0x47,0x3a,0x75,0xd7,0x14,0xe9,0xf6,0x87,0xa8,
0x29,0xe2,0x9f,0x6d,0xdf,0x29,0xd1,0x09,0x0e,0x6b,0xdc,0x34,
0x71,0xc2,0x9b,0x00,0x5f,0xa7,0x6b,0x0a,0x81,0x53,0x0c,0x9c,
0x8e,0x80,0xd3,0xbf,0x03,0x4e,0xa7,0x80,0xd3,0x3f,0x03,0xa7,
0x4d,0xdc,0x41,0x31,0x70,0xf2,0xc0,0x5f,0x1c,0xe1,0x2f,0x8f,
0xee,0xd0,0x63,0xfd,0xeb,0xcf,0x1f,0x3e,0xad,0x23,0xa7,0xe5,
0xf7,0x57,0xb7,0xf3,0xab,0xdb,0x79,0xea,0xe4,0x80,0xcf,0x95,
0xd0,0xd8,0x08,0x81,0xb3,0x43,0xf2,0x77,0x00,0x00,0x00,0xff,
0xff,0x80,0x30,0x95,0xfd,0x0f,0x0b,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}