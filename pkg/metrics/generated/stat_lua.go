package generated

import (
	"bytes"
	"compress/gzip"
	"io"
)

func init() {
	EmbeddedFiles["stat.lua"] = stat_lua
}

// stat_lua returns raw, uncompressed file data.
func stat_lua() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xb4,0x56,
0xdf,0x8b,0x1b,0x37,0x10,0x7e,0xdf,0xbf,0x62,0x30,0x84,0xf3,
0xde,0x79,0x7d,0xb6,0xdb,0xdc,0x43,0xc0,0x2d,0x81,0x98,0x10,
0x42,0xa1,0xe4,0x42,0x69,0x09,0x87,0xd1,0x59,0xb3,0x37,0xea,
0xed,0x4a,0xae,0xa4,0xb5,0xcf,0xa4,0xe9,0xdf,0x5e,0xa4,0xfd,
0x25,0x79,0xed,0x3b,0x4a,0xc9,0xbe,0xec,0x6a,0x34,0xa3,0xf9,
0xe6,0xd3,0x7c,0x63,0x67,0x19,0x3c,0xe2,0x01,0x04,0x87,0xf1,
0xdb,0xbf,0xdf,0xa5,0xb0,0x63,0x45,0x85,0x49,0x96,0xc1,0x02,
0x3e,0xe2,0xc1,0x00,0x93,0x1c,0x16,0xf0,0xf6,0xd3,0xfb,0xdb,
0x24,0x29,0xd4,0x86,0x15,0xde,0x7d,0x09,0x1f,0x57,0x7f,0xdc,
0x7e,0x99,0xdf,0x35,0x36,0xc1,0x5b,0xd3,0xa2,0x35,0xd9,0xc3,
0x16,0x61,0xe9,0x22,0x7f,0xeb,0xfd,0x0c,0x2b,0xb7,0x85,0x33,
0x5b,0x25,0xab,0xf2,0x1e,0xf5,0xd8,0xef,0x2f,0xee,0xd2,0xf6,
0x74,0x63,0x99,0xc5,0x3a,0x85,0xb1,0x5a,0xc8,0x87,0x69,0xae,
0x74,0xc9,0xec,0x78,0x54,0xa2,0xd5,0x62,0xf3,0xe6,0x95,0x79,
0xf3,0xca,0x8c,0x26,0x0e,0xc6,0x04,0x04,0x4f,0x9b,0x38,0xa9,
0xf6,0xb0,0x04,0x8d,0x5c,0x98,0xe9,0x86,0x15,0xc5,0xf8,0xe2,
0xf3,0x87,0x5f,0x56,0x17,0xe9,0x97,0xf9,0x1d,0x5c,0xc1,0x0c,
0xb2,0xec,0xaf,0x4a,0x6c,0x1e,0x61,0xcf,0x0e,0x60,0x15,0x6c,
0x94,0xdc,0xa1,0xb6,0xee,0xb3,0x06,0x92,0xb8,0x9a,0xeb,0xa3,
0xc8,0xa0,0x3d,0x89,0xc0,0x61,0x6b,0xb2,0x4b,0xc5,0xb1,0x4d,
0xed,0x29,0x83,0x25,0x7c,0xfd,0x16,0xd4,0xd0,0x7d,0x2a,0x8d,
0xfc,0x08,0xd9,0xfb,0xd5,0xe7,0x8b,0x49,0x57,0x69,0x57,0x7a,
0xb9,0xb6,0xa2,0x44,0x63,0x59,0xb9,0x85,0x25,0x8c,0x4b,0x66,
0x69,0x9a,0x17,0x4a,0xe9,0xb1,0x2b,0xee,0x1a,0x7e,0x98,0xcd,
0x52,0xb8,0xf4,0xaf,0x26,0x82,0x5e,0x8a,0xb8,0x69,0x42,0xdc,
0xbb,0x4d,0xc3,0x45,0x9e,0xa3,0x46,0x69,0x05,0x2b,0xdc,0x4d,
0xf8,0x7b,0x5a,0xc2,0xe8,0xdd,0x28,0x49,0x44,0xde,0x22,0xb6,
0x84,0x32,0x01,0x80,0xae,0xba,0xcd,0x9f,0x46,0xc9,0x29,0xc7,
0x8d,0xe2,0x38,0xae,0x9d,0xd2,0x04,0x0b,0x83,0x91,0xd7,0x57,
0xbf,0x72,0x4f,0xc1,0x8c,0x5d,0x57,0x5b,0xce,0xac,0xb3,0x4b,
0xb5,0x9f,0x74,0x5b,0xe5,0x9a,0xed,0x1e,0x60,0x09,0xb3,0xd0,
0x54,0xb2,0xa7,0x63,0x93,0x55,0xd6,0x43,0x8c,0x8c,0x52,0x0f,
0xdc,0x02,0x0e,0x82,0x55,0xe8,0xb2,0xd5,0xb8,0x13,0xaa,0x32,
0x11,0x42,0xf7,0x0c,0x80,0x78,0xff,0x63,0x28,0xee,0x09,0xb3,
0x04,0x5b,0xdf,0x26,0x49,0xf7,0x4d,0xc3,0xba,0x68,0x58,0x17,
0x9d,0xaa,0x8b,0x06,0x75,0xc5,0x77,0x4b,0xa7,0xea,0xa2,0xef,
0x5b,0x97,0x7f,0x25,0x28,0x79,0xdb,0x39,0x42,0x6e,0x2b,0xbb,
0xee,0x34,0x5c,0x7f,0xf8,0xa6,0x89,0x7a,0xaa,0x6b,0x9d,0x3a,
0xca,0x35,0x02,0x2c,0xeb,0x0e,0x99,0xba,0x85,0xdf,0x13,0x39,
0x48,0x65,0x07,0xdd,0xe6,0x9e,0x2c,0x03,0xa9,0xa0,0x2b,0xad,
0x9e,0x48,0xed,0x66,0x7f,0x4c,0x80,0xa0,0xdd,0x6c,0x1a,0x9c,
0x59,0xd6,0x35,0x2c,0x4a,0xdf,0xb0,0x3e,0x2c,0xed,0x1c,0x43,
0x35,0xde,0x46,0x6a,0x9c,0xf8,0xf0,0xd0,0xd3,0x56,0x5a,0xc2,
0x68,0x36,0xf2,0x26,0xcf,0x46,0x90,0x4a,0xe4,0x79,0x87,0x03,
0x32,0x88,0xcb,0xdb,0x3b,0x5d,0xf5,0x80,0x5b,0x35,0x1c,0x17,
0xbb,0x27,0x66,0xc1,0x90,0xaa,0x0a,0x0e,0x7b,0x04,0xae,0x80,
0x50,0xe3,0xcf,0xcf,0x41,0xf0,0x29,0xe2,0xdb,0xf0,0x50,0xae,
0xc1,0x2b,0x3f,0x1b,0x66,0x4d,0x93,0x73,0xec,0xf9,0x92,0x86,
0x28,0xbd,0x66,0xdd,0x50,0xb4,0x84,0x20,0xf1,0xc9,0xc2,0x02,
0xee,0x0b,0xb5,0x79,0x34,0xb0,0xad,0x0c,0xa1,0x01,0x55,0x70,
0xd4,0x8d,0xf2,0x99,0xe9,0x2f,0x2c,0x57,0x1a,0xee,0x95,0x25,
0x17,0xfc,0xba,0xf4,0xbf,0x20,0x73,0x6a,0xb2,0x19,0x3f,0x67,
0x9d,0xc7,0xeb,0xd2,0x35,0x4e,0x9d,0x37,0xd4,0xf0,0x3f,0x91,
0x88,0x7b,0xb2,0x5c,0x57,0xe0,0xbe,0x49,0x27,0x0c,0x08,0x09,
0xcc,0x5b,0x4c,0xa1,0x6c,0x50,0xdc,0x19,0xb1,0xd7,0x82,0x68,
0x5d,0xd8,0xee,0x21,0x18,0x0f,0x5e,0x16,0xed,0x56,0xc9,0x9e,
0xfa,0xad,0x50,0x1c,0x03,0xa8,0xad,0x42,0xa2,0xe4,0x67,0x86,
0x51,0xe4,0xd3,0xe8,0x30,0xb2,0x35,0x82,0x8d,0xcf,0x6a,0xe7,
0x44,0x64,0xad,0x07,0x45,0x7d,0x6d,0x0d,0x97,0x73,0xea,0xb9,
0xa4,0x98,0x4b,0xfa,0x3f,0x5c,0x9e,0x19,0x30,0x21,0x97,0x74,
0x9e,0x4b,0x7a,0x89,0xcb,0xc1,0x50,0x8b,0xb8,0x3c,0x3b,0x00,
0x23,0x9f,0x21,0x97,0x74,0x82,0x4b,0x3a,0xc9,0x25,0x1d,0x73,
0xe9,0xb4,0xd3,0x8b,0xb4,0xe7,0x28,0x89,0xb8,0x0f,0x16,0x57,
0x30,0x4f,0x8e,0x6f,0x2b,0x5e,0x5f,0x45,0x3a,0x75,0xd7,0x14,
0xe9,0xf6,0xa7,0xa8,0x29,0xe2,0x1f,0xdd,0xae,0x53,0xa2,0x13,
0x1c,0xd6,0xb8,0x69,0xe2,0x84,0xd7,0x01,0xbe,0x56,0xd7,0x14,
0x02,0xa7,0x18,0x38,0x1d,0x01,0xa7,0xff,0x06,0x9c,0x4e,0x01,
0xa7,0xe7,0x81,0xd3,0x3a,0xee,0xa0,0x18,0x38,0x79,0xe0,0x2f,
0x8e,0xf2,0x97,0x47,0x78,0xe8,0xb1,0xfa,0xfd,0xd7,0x0f,0x9f,
0x56,0x91,0xd3,0xe2,0xc7,0xcb,0x9b,0xd9,0xe5,0xcd,0x2c,0x75,
0x72,0xc0,0xa7,0xad,0xd0,0x58,0x0b,0x81,0xb3,0x43,0x92,0x34,
0x43,0xd7,0xaa,0xfa,0x3f,0xe0,0x38,0xa0,0x3c,0x4d,0xfe,0x0d,
0x00,0x00,0xff,0xff,0x0f,0x72,0x39,0xc5,0x35,0x0b,0x00,0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}